openapi: 3.1.0
info:
  title: Pets API
  version: 1.0.0
  description: An API for managing pets
  x-kubernetes-operator-group: 'example.com'
  x-kubernetes-operator-version: 'v1'
  x-kubernetes-operator-resource-ref: 'uuid'
  x-kubernetes-operator-include-tags:
    - cats
    - dogs
    - horses
servers:
  - url: http://localhost:8080
    description: Development server
paths:
  /cats:
    get:
      tags:
        - cats
      operationId: getCats
      summary: Get all cats
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
              examples:
                Cats:
                  $ref: '#/components/examples/Cats'
    post:
      tags:
        - cats
      operationId: createCat
      summary: Create a new cat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
            examples:
              Cat:
                $ref: '#/components/examples/Cat'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
              examples:
                Cat:
                  $ref: '#/components/examples/Cat'
  /cats/{id}:
    get:
      tags:
        - cats
      operationId: getCatById
      summary: Get a cat by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
              examples:
                Cat:
                  $ref: '#/components/examples/Cat'
        '404':
          description: Not found
    put:
      tags:
        - cats
      operationId: updateCatById
      summary: Update a cat by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
            examples:
              Cat:
                $ref: '#/components/examples/Cat'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
              examples:
                Cat:
                  $ref: '#/components/examples/Cat'
        '404':
          description: Not found
    delete:
      tags:
        - cats
      operationId: deleteCatById
      summary: Delete a cat by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /dogs:
    get:
      tags:
        - dogs
      operationId: getDogs
      summary: Get all dogs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dog'
              examples:
                Dog:
                  $ref: '#/components/examples/Dogs'
    post:
      tags:
        - dogs
      operationId: createDog
      summary: Create a new dog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dog'
            examples:
              Dog:
                $ref: '#/components/examples/Dog'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dog'
              examples:
                Dog:
                  $ref: '#/components/examples/Dog'
  /dogs/{id}:
    get:
      tags:
        - dogs
      operationId: getDogById
      summary: Get a dog by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dog'
              examples:
                Dogs:
                  $ref: '#/components/examples/Dog'
        '404':
          description: Not found
    put:
      tags:
        - dogs
      operationId: updateDogById
      summary: Update a dog by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dog'
            examples:
              Dog:
                $ref: '#/components/examples/Dog'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dog'
              examples:
                Dog:
                  $ref: '#/components/examples/Dog'
        '404':
          description: Not found
    delete:
      tags:
        - dogs
      operationId: deleteDogById
      summary: Delete a dog by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /horses:
    get:
      tags:
        - horses
      operationId: getHorses
      summary: Get all horses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Horse'
              examples:
                Horses:
                  $ref: '#/components/examples/Horses'
    post:
      tags:
        - horses
      operationId: createHorse
      summary: Create a new horse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Horse'
            examples:
              Horse:
                $ref: '#/components/examples/Horse'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horse'
              examples:
                Horse:
                  $ref: '#/components/examples/Horse'
  /horses/{id}:
    get:
      tags:
        - horses
      operationId: getHorseById
      summary: Get a horse by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horse'
              examples:
                Horse:
                  $ref: '#/components/examples/Horse'
        '404':
          description: Not found
    put:
      tags:
        - horses
      operationId: updateHorseById
      summary: Update a horse by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Horse'
            examples:
              Horse:
                $ref: '#/components/examples/Horse'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Horse'
              examples:
                Horse:
                  $ref: '#/components/examples/Horse'
        '404':
          description: Not found
    delete:
      tags:
        - horses
      operationId: deleteHorseById
      summary: Delete a horse by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
components:
  examples:
    Cat:
      value:
        name: 'Fluffy'
        breed: 'Persian'
        age: 3
        x-kubernetes-operator-example-metadata:
          name: 'Fluffy'
    Cats:
      value:
        - name: 'Fluffy'
          breed: 'Persian'
          age: 3
          x-kubernetes-operator-example-metadata:
            name: 'Fluffy'
        - name: 'Whiskers'
          breed: 'Siamese'
          age: 2
          x-kubernetes-operator-example-metadata:
            name: 'Whiskers'
    Dog:
      value:
        name: 'Fido'
        breed: 'Bulldog'
        age: 3
        x-kubernetes-operator-example-metadata:
          name: 'Fido'
    Dogs:
      value:
        - name: 'Fido'
          breed: 'Bulldog'
          age: 3
          x-kubernetes-operator-example-metadata:
            name: 'Fido'
        - name: 'Rex'
          breed: 'German Shepherd'
          age: 5
          x-kubernetes-operator-example-metadata:
            name: 'Rex'
    Horse:
      value:
        name: 'Star'
        breed: 'Arabian'
        age: 5
        x-kubernetes-operator-example-metadata:
          name: 'Star'
    Horses:
      value:
        - name: 'Star'
          breed: 'Arabian'
          age: 5
          x-kubernetes-operator-example-metadata:
            name: 'Star'
        - name: 'Thunder'
          breed: 'Thoroughbred'
          age: 7
          x-kubernetes-operator-example-metadata:
            name: 'Thunder'
  schemas:
    Cat:
      type: object
      required:
        - name
        - breed
        - age
      properties:
        uuid:
          type: string
        name:
          type: string
        breed:
          type: string
        age:
          type: integer
    Dog:
      type: object
      required:
        - name
        - breed
        - age
      properties:
        uuid:
          type: string
        name:
          type: string
        breed:
          type: string
        age:
          type: integer
    Horse:
      type: object
      required:
        - name
        - breed
        - age
      properties:
        uuid:
          type: string
        name:
          type: string
        breed:
          type: string
        age:
          type: integer
