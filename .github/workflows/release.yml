name: Release

on:
  push:
  # release:
  #   types:
  #     - published

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust Targets
        run: |
          rustup target add ${{ matrix.target }}

      - name: Build
        env:
          RUSTFLAGS: '-C target-feature=+crt-static'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      # - name: Add tools for cross-compiling
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y --no-install-recommends \
      #     pkg-config \
      #     musl-tools
      #     rustup target add \
      #         aarch64-unknown-linux-musl \
      #         x86_64-unknown-linux-musl
      #     cd && \
      #         wget https://musl.cc/aarch64-linux-musl-cross.tgz && \
      #         tar -xzf aarch64-linux-musl-cross.tgz && \
      #         sudo mv aarch64-linux-musl-cross /opt/ && \
      #         rm -rf aarch64-linux-musl-cross.tgz
      #     cd && \
      #         wget https://musl.cc/x86_64-linux-musl-cross.tgz && \
      #         tar -xzf x86_64-linux-musl-cross.tgz && \
      #         sudo mv x86_64-linux-musl-cross /opt/ &&
      #         rm -rf x86_64-linux-musl-cross.tgz
      #     echo "PATH=/opt/aarch64-linux-musl-cross/bin:/opt/x86_64-linux-musl-cross/bin:$PATH" >> $GITHUB_ENV

      # - name: Build the CLI
      #   run: |
      #     RELEASE=true TARGET_ARCH=${{ matrix.target }} task build
      #     mv target/${{ matrix.target }}/release/kopgen target/${{ matrix.target }}/release/kopgen_${{ matrix.target }}

      - name: Debug
        run: |
          ls -la target/${{ matrix.target }}/release
          file target/${{ matrix.target }}/release/kopgen

      # - name: Upload CLI binary
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: target/${{ matrix.target }}/release/kopgen_${{ matrix.target }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
