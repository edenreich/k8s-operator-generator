name: Release

on:
  push:
  # release:
  #   types:
  #     - published

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust Targets
        run: |
          rustup target add ${{ matrix.target }}

      # Unfortunatly, github still don't support managed runners for arm64 :(
      # It's a sad fact that they only offer it for enterprise customers
      # I can run it on my raspberry pi, but it's not ideal
      # Instead will cross-compile this part for now with musl libc
      - name: Add tools for cross-compiling with musl
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
          pkg-config \
          musl-tools
          rustup target add \
              aarch64-unknown-linux-musl
          cd && \
              wget https://musl.cc/aarch64-linux-musl-cross.tgz && \
              tar -xzf aarch64-linux-musl-cross.tgz && \
              sudo mv aarch64-linux-musl-cross /opt/ && \
              rm -rf aarch64-linux-musl-cross.tgz
          echo "PATH=/opt/aarch64-linux-musl-cross/bin:$PATH" >> $GITHUB_ENV

      - name: Build static binary
        env:
          RUSTFLAGS: '-C target-feature=+crt-static'
        run: |
          cargo build --verbose --release --target ${{ matrix.target }}

      - name: Rename binary to the published name
        run: |
          mv target/${{ matrix.target }}/release/kopgen target/${{ matrix.target }}/release/kopgen_${{ matrix.target }}

      - name: Debug
        run: |
          ls -la target/${{ matrix.target }}/release
          file target/${{ matrix.target }}/release/kopgen

      - name: Upload CLI binary
        uses: softprops/action-gh-release@v2
        with:
          files: target/${{ matrix.target }}/release/kopgen_${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
