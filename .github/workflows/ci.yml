name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  analyse:
    name: Analyse code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Analyse the code
        run: task analyse

  build:
    name: Build code
    needs:
      - analyse
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add tools for cross-compiling
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          tar \
          pkg-config \
          libssl-dev \
          musl-tools
          rustup target add \
              aarch64-unknown-linux-musl \
              x86_64-unknown-linux-musl
          cd && \
              wget https://musl.cc/aarch64-linux-musl-cross.tgz && \
              tar -xzf aarch64-linux-musl-cross.tgz && \
              sudo mv aarch64-linux-musl-cross /opt/ && \
              rm -rf aarch64-linux-musl-cross.tgz
          cd && \
              wget https://musl.cc/x86_64-linux-musl-cross.tgz && \
              tar -xzf x86_64-linux-musl-cross.tgz && \
              sudo mv x86_64-linux-musl-cross /opt/ &&
              rm -rf x86_64-linux-musl-cross.tgz
          echo "PATH=/opt/aarch64-linux-musl-cross/bin:/opt/x86_64-linux-musl-cross/bin:$PATH" >> $GITHUB_ENV

      - name: Build
        run: |
          echo $PATH
          RELEASE=true TARGET_ARCH=${{ matrix.target }} task build

  test:
    name: Test code
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Test the code
        run: task test
